{"version":3,"sources":["FilterInput.js","Table.js","App.js","API.js","index.js"],"names":["FilterInput","users","updateUsers","useState","inputValue","updateInput","useEffect","filteredUsers","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","Table","sortedUsers","updateSortedUsers","className","scope","onClick","updateSort","sort","a","b","nameA","nameB","map","location","city","state","gender","email","last","title","App","initialUsers","updateAvailableUsers","usersToRender","updateUsersToRender","axios","get","then","results","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAsBeA,EApBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,mBAAS,IADG,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OAZAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EACIH,EACAA,EAAMO,QACJ,qBAAGC,KAAQC,MACHC,cAAcC,QAAQR,EAAWO,gBAAkB,KAGnET,EAAYK,KACX,CAACH,EAAYH,IAGd,uBAAOY,MAAOT,EAAYU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,W,QCmDnDI,EAnED,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAAY,EACcE,mBAAS,IADvB,mBACpBe,EADoB,KACPC,EADO,KAK3B,OAFAb,qBAAU,kBAAMa,EAAkBlB,KAAQ,CAACA,IAGzC,8BACE,wBAAOmB,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,oBACEA,MAAM,MACNC,QAAS,WACP,IACMC,EADS,YAAOtB,GACOuB,MAAK,SAACC,EAAGC,GACpC,IAAMC,EAAQF,EAAEhB,KAAKC,MACfkB,EAAQF,EAAEjB,KAAKC,MAErB,OAAIiB,EAAQC,GACF,EAEND,EAAQC,EACH,EAGF,KAGTT,EAAkBI,IAlBtB,mBAuBA,oBAAIF,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGH,EAAYW,KACX,oBACEC,SAAYC,EADd,EACcA,KAAMC,EADpB,EACoBA,MAClBC,EAFF,EAEEA,OACAC,EAHF,EAGEA,MAHF,IAIEzB,KAAQC,EAJV,EAIUA,MAAOyB,EAJjB,EAIiBA,KAAMC,EAJvB,EAIuBA,MAJvB,OAME,+BACE,6BAAKA,IACL,6BAAK1B,IACL,6BAAKyB,IACL,6BAAKF,IACL,6BAAKC,IACL,6BAAKH,IACL,6BAAKC,IACL,yBAROE,c,uBCxBRG,MArBf,WAAgB,IAAD,EACgClC,mBAAS,IADzC,mBACNmC,EADM,KACQC,EADR,OAEgCpC,mBAAS,IAFzC,mBAENqC,EAFM,KAESC,EAFT,KAQb,OAJAnC,qBAAU,WCPHoC,IAAMC,IAAI,gDDQJC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BN,EAAqBM,QAC/D,IAGD,qBAAKzB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,iDACA,cAAC,EAAD,CAAanB,MAAOqC,EAAcpC,YAAauC,IAC/C,oBAAIrB,UAAU,SACd,cAAC,EAAD,CAAOnB,MAAOuC,UEftBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f9c760de.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst FilterInput = ({ users, updateUsers }) => {\n  const [inputValue, updateInput] = useState(\"\");\n\n  useEffect(() => {\n    const filteredUsers =\n      inputValue === \"\"\n        ? users\n        : users.filter(\n            ({ name: { first } }) =>\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n          );\n\n    updateUsers(filteredUsers);\n  }, [inputValue, users]);\n\n  return (\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\n  );\n};\n\nexport default FilterInput;","import React, { useState, useEffect } from \"react\";\n\nconst Table = ({ users }) => {\n  const [sortedUsers, updateSortedUsers] = useState([]);\n\n  useEffect(() => updateSortedUsers(users), [users]);\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Title</th>\n            <th\n              scope=\"col\"\n              onClick={() => {\n                const usersCopy = [...users];\n                const updateSort = usersCopy.sort((a, b) => {\n                  const nameA = a.name.first;\n                  const nameB = b.name.first;\n\n                  if (nameA < nameB) {\n                    return -1;\n                  }\n                  if (nameA > nameB) {\n                    return 1;\n                  }\n\n                  return 0;\n                });\n\n                updateSortedUsers(updateSort);\n              }}\n            >\n              First\n            </th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Gender</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">City</th>\n            <th scope=\"col\">State</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedUsers.map(\n            ({\n              location: { city, state },\n              gender,\n              email,\n              name: { first, last, title }\n            }) => (\n              <tr key={email}>\n                <td>{title}</td>\n                <th>{first}</th>\n                <td>{last}</td>\n                <td>{gender}</td>\n                <td>{email}</td>\n                <td>{city}</td>\n                <td>{state}</td>\n                <td></td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;","import React, { useEffect, useState } from \"react\";\nimport FilterInput from \"./FilterInput\";\nimport Table from \"./Table\";\nimport { getUsers } from \"./API\";\nimport \"./App.css\";\n\nfunction App() {\n  const [initialUsers, updateAvailableUsers] = useState([]);\n  const [usersToRender, updateUsersToRender] = useState([]);\n\n  useEffect(() => {\n    getUsers().then(({ data: { results } }) => updateAvailableUsers(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"jumbotron\">\n        <h1 className=\"display-4\">Employee Directory</h1>\n        <p className=\"lead\">Please search or sort by first name</p>\n        <FilterInput users={initialUsers} updateUsers={updateUsersToRender} />\n        <hr className=\"my-4\" />\n        <Table users={usersToRender} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nexport const getUsers = function() {\n  return axios.get(\"https://randomuser.me/api/?results=10&nat=us\");\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}